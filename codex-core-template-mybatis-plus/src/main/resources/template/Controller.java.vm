package ${controllerPackagePath};

import org.springframework.util.StringUtils;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.beans.factory.annotation.Autowired;
import pub.codex.apix.annotations.*;
import pub.codex.common.models.R;
import pub.codex.apix.annotations.group.VG;
import ${entityPackagePath}.${className}Entity;
import ${servicePackagePath}.${className}Service;

/**
 * ${comments}
 *
 * @date ${datetime}
 */
@Api("${comments}")
@RestController
public class ${className}Controller {

#if(${interfaceType})
    @Autowired
    ${className}Service ${classname}Service;
#end
#foreach (${type} in ${interfaceType})
#if(${type}=="add")

    /**
    * 新增接口
    * @param ${classname}Entity
    * @return
    */
    @ApiOperation("新增接口")
    @PostMapping("/${classname}/add")
    public R add(@RequestBody @Validated(VG.Add.class)${className}Entity ${classname}Entity) {
        ${classname}Service.insert(${classname}Entity);
        return R.ok();
    }
#end
#if(${type}=="del")

    /**
     * 删除接口
     * @param ${classname}Entity
     * @return
     */
    @ApiOperation("删除接口")
    @PostMapping("/${classname}/delete")
    public R delete(@RequestBody @Validated(VG.Delete.class)${className}Entity ${classname}Entity) {
        ${classname}Service.deleteById(${classname}Entity);
        return R.ok();
    }
#end
#if(${type}=="update")

    /**
     * 更新接口
     * @param ${classname}Entity
     * @return
     */
    @ApiOperation("更新接口")
    @PostMapping("/${classname}/update")
    public R update(@RequestBody @Validated(VG.Update.class)${className}Entity ${classname}Entity) {
        ${classname}Service.updateById(${classname}Entity);
        return R.ok();
    }
#end
#if(${type}=="detail")

    /**
     * 详情接口
     * @param ${classname}Entity
     * @return
     */
    @ApiOperation("详情接口")
    @PostMapping("/${classname}/detail")
    public R detail(@RequestBody @Validated(VG.Get.class)${className}Entity ${classname}Entity) {
        return R.ok().data(${classname}Service.selectById(${classname}Entity));
    }
#end
#if(${type}=="list")

    /**
     * 列表接口
     * @param ${classname}Entity
     * @return
     */
    @ApiOperation("列表接口")
    @PostMapping("/${classname}/list")
    public R list(@RequestBody @Validated(VG.List.class)${className}Entity ${classname}Entity) {
        return R.ok().data(${classname}Service.selectList(new EntityWrapper<${className}Entity>()
            #foreach (${column} in ${columns})
            #if(${column.queryList})
            #foreach(${queryList}in ${column.queryList})
                 ${queryList}
            #end
            #end
            #end
        ));
    }
#end
#end

}