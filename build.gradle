def codexVersion = '3.0.0.release'
def codexGroup = 'pub.codex'
def vJavaLang = '1.8'

def javaProjects = [project(':codex-core'),
                    project(':codex-common-db'),
                    project(':codex-common'),
                    project(':codex-apix'),
                    project(':codex-index'),
                    project(':codex-core-template-stream'),
                    project(':codex-core-template-mybatis-plus')]
def bootProjects = []
def nexusProjects = [project(':codex-core'),
                     project(':codex-apix'),
                     project(':codex-common-db'),
                     project(':codex-common'),
                     project(':codex-core-ui'),
                     project(':codex-apix-ui'),
                     project(':codex-index'),
                     project(':codex-core-template-stream'),
                     project(':codex-core-template-mybatis-plus')]



subprojects() {

    apply plugin: 'java'

    group = codexGroup
    version = codexVersion

    targetCompatibility = vJavaLang
    sourceCompatibility = vJavaLang

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }

}

configure(javaProjects) {

    apply plugin: 'idea'
    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }
}

configure(bootProjects) {

    apply plugin: 'org.springframework.boot'
}

configure(nexusProjects) {

    apply plugin: "maven-publish"
    apply plugin: 'maven'
    apply plugin: 'signing'


    // 后面的都是打包的配置
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allJava
    }
    // 生成 javadoc jar
        task javadocJar(type: Jar) {
            classifier = 'javadoc'
            from javadoc.destinationDir
        }


    publishing {

        publications {

            mavenJava(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version
                from components.java
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = "Code-x"
                    description = "Code-X 让程序狗喝茶"
                    url = "https://github.com/codex-league/codex"
                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    developers {
                        developer {
                            id = "codex"
                            name = "codex"
                            email = "codex_team@163.com"
                        }
                    }
                    scm {
                        connection = "scm:git:https://github.com/codex-league/codex.git"
                        developerConnection = "scm:git:https://github.com/codex-league/codex.git"
                        url = "https://github.com/codex-league/codex"
                    }


                }
            }
        }
        repositories {
            maven {
                name 'sonatypeRepository'
                url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'

                credentials {
                    username = System.getenv("NEXUS_USERNAME")
                    password = System.getenv("NEXUS_PASSWORD")
                }
            }

            maven {
                name 'sonatypeSnapshotRepository'
                url 'https://oss.sonatype.org/content/repositories/snapshots'

                credentials {
                    username = System.getenv("NEXUS_USERNAME")
                    password = System.getenv("NEXUS_PASSWORD")
                }
            }

        }
    }

    signing {
        sign publishing.publications.mavenJava
    }



    
}



buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}



